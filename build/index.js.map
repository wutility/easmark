{"version":3,"file":"index.js","sources":["../src/utilBlock.js","../src/utilInline.js","../src/cleanUp.js","../src/easmark.js"],"sourcesContent":["import { outdent } from './helpers'\r\n\r\nconst utilBlock = {\r\n  regex: {\r\n    list: /^(?:(^|\\n)([+-]|\\d+\\.) +(.*(\\n[ \\t]+.*)*))+/,\r\n    table: /^(\\|[^\\n]+\\|\\r?\\n)((?:\\|:?[-]+:?)+\\|)(\\n(?:\\|[^\\n]+\\|\\r?\\n?)*)/g,\r\n    //  taskList: /\\-\\s\\[\\s?x?\\]\\s+(.*)\\n/g,\r\n    code: /(`{3,}|~{3,})\\n? *(\\S+)? *([\\s\\S]+?)\\1/gm,\r\n  },\r\n  code (text, regex) {\r\n    return text.replace(regex, (_, backticks, lang, code) => {\r\n\r\n      code = code.replace(/</g, \"&lt;\")\r\n        .replace(/>/g, \"&gt;\")\r\n        .replace(/\"/g, \"&quot;\")\r\n        .replace(/'/g, \"&#39;\");\r\n\r\n      return `<pre><code class=\"language-${lang}\">${code.replace(/^\\n*\\s+/g, '')}</code></pre>`\r\n    })\r\n  },\r\n  list (text, regex, listType) {\r\n    // let self = this\r\n    // listType = text.match(/^[+-]/m) ? 'ul' : 'ol';\r\n    // return text ?\r\n    //   `<${listType}>${text.replace(/(?:[+-]|\\d+\\.) +(.*)\\n?(([ \\t].*\\n?)*)/g, (_, a, b) =>\r\n    //     `<li>${(`${a}\\n${outdent(b)\r\n    //       .replace(regex, self.list)}`)}</li>`)}</${listType}>`\r\n    //   : '';\r\n    return text\r\n  },\r\n  taskList (text, regex, listType) {\r\n    return text\r\n  },\r\n  table (text) {\r\n    return text\r\n  }\r\n}\r\n\r\nexport default utilBlock","const utilInline = {\r\n  regex: {\r\n    //url:/https?:\\/\\/[^\\/?#\\s]*(?:\\/[^?#\\s]*)?(?:\\?[^#\\s]*)?(?:#\\S*)?/g,\r\n    heading: /^(#+)\\s+(.*)/,\r\n    blockquote: /^>\\s+.*/g,\r\n    media: /[!&]?\\[([!&]?\\[.*?\\)|[^\\]]*?)]\\((.*?)( .*?)?\\)|(\\w+:\\/\\/[$\\-.+!*'()/,\\w]+)/g\r\n  },\r\n  heading (text, regex) {\r\n    return text.replace(regex, (_, hash, value) => {\r\n      return `<h${hash.length}>${value}</h${hash.length}>`\r\n    });\r\n  },\r\n  blockquote (text) {\r\n    text = text.replace(/\\>\\s+/g, '')\r\n    return `<blockquote>${text}</blockquote>`\r\n  }, \r\n  media (text, regex) {\r\n   return text.replace(regex, (match, title, src) => {\r\n      return /^!/.test(match)\r\n        ? `<img src=\"${src}\" alt=\"${title}\">\\n`\r\n        : /^&/.test(match)\r\n          ? `<iframe src=\"${src}\" title=\"${title}\"></iframe>\\n`\r\n          : `<a href=\"${src}\">${title}</a>\\n`\r\n    });\r\n  }\r\n}\r\n\r\nexport default utilInline","export default function cleanUp (text) {\r\n  const boldItalic = /([*_]{1,3})((.|\\n)+?)\\1/g\r\n  const strike = /(~{1,3})((.|\\n)+?)\\1/g\r\n  const marked = /`([^`].*?)`/g\r\n\r\n  text = text.replace(boldItalic, (_, stars, value) => {\r\n    return stars.length % 2 ? `<strong>${value}</strong>` : `<em>${value}</em>`\r\n  });\r\n\r\n  // match: ~~word~~\r\n  text = text.replace(strike, (_, stars, value) => {\r\n    return `<s>${value}</s>`\r\n  });\r\n\r\n  // match: `word`\r\n  text = text.replace(marked, (_, value) => {\r\n    return `<span class=\"marked\">${value}</span>`\r\n  });\r\n\r\n  // paragraph\r\n  if(!/^\\<.*\\>/g.test(text.trim())) {\r\n    text = `<p>${text}</p>`\r\n  }\r\n\r\n  return text\r\n}","import utilBlock from './utilBlock'\r\nimport utilInline from './utilInline'\r\nimport cleanUp from './cleanUp'\r\n\r\nfunction applyRegex (block, util) {\r\n  Object.keys(util.regex).forEach(reg => {\r\n    if (block.match(util.regex[reg])) block = util[reg](block, util.regex[reg])\r\n  });\r\n  return block\r\n}\r\n\r\nexport default function easmark (text) {\r\n  let blocks = text.split(/\\n\\s*\\n/)\r\n  let result = []\r\n\r\n  for (let block of blocks) {\r\n    block = applyRegex(block, utilInline)\r\n    block = applyRegex(block, utilBlock)\r\n    \r\n    result.push(block)\r\n  }\r\n\r\n  return result.map(line => cleanUp(line)).join('\\n')\r\n}"],"names":[],"mappings":"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"}