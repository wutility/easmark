{"version":3,"file":"index.umd.js","sources":["../src/utilBlock.js","../src/utilInline.js","../src/cleanUp.js","../src/easmark.js"],"sourcesContent":["import { outdent } from './helpers'\r\n\r\nconst utilBlock = {\r\n  regex: {\r\n    list: /^(?:(^|\\n)([+-]|\\d+\\.) +(.*(\\n[ \\t]+.*)*))+/,\r\n    table: /^(\\|[^\\n]+\\|\\r?\\n)((?:\\|:?[-]+:?)+\\|)(\\n(?:\\|[^\\n]+\\|\\r?\\n?)*)/g,\r\n    //  taskList: /\\-\\s\\[\\s?x?\\]\\s+(.*)\\n/g,\r\n    code: /(`{3,}|~{3,})\\n? *(\\S+)? *([\\s\\S]+?)\\1/gm,\r\n  },\r\n  code (text, regex) {\r\n    return text.replace(regex, (_, backticks, lang, code) => {\r\n\r\n      code = code.replace(/</g, \"&lt;\")\r\n        .replace(/>/g, \"&gt;\")\r\n        .replace(/\"/g, \"&quot;\")\r\n        .replace(/'/g, \"&#39;\");\r\n\r\n      return `<pre><code class=\"language-${lang}\">${code.replace(/^\\n*\\s+/g, '')}</code></pre>`\r\n    })\r\n  },\r\n  list (text, regex, listType) {\r\n    // let self = this\r\n    // listType = text.match(/^[+-]/m) ? 'ul' : 'ol';\r\n    // return text ?\r\n    //   `<${listType}>${text.replace(/(?:[+-]|\\d+\\.) +(.*)\\n?(([ \\t].*\\n?)*)/g, (_, a, b) =>\r\n    //     `<li>${(`${a}\\n${outdent(b)\r\n    //       .replace(regex, self.list)}`)}</li>`)}</${listType}>`\r\n    //   : '';\r\n    return text\r\n  },\r\n  taskList (text, regex, listType) {\r\n    return text\r\n  },\r\n  table (text) {\r\n    return text\r\n  }\r\n}\r\n\r\nexport default utilBlock","const utilInline = {\r\n  regex: {\r\n    //url:/https?:\\/\\/[^\\/?#\\s]*(?:\\/[^?#\\s]*)?(?:\\?[^#\\s]*)?(?:#\\S*)?/g,\r\n    heading: /^(#+)\\s+(.*)/,\r\n    blockquote: /^>\\s+.*/g,\r\n    media: /[!&]?\\[([!&]?\\[.*?\\)|[^\\]]*?)]\\((.*?)( .*?)?\\)|(\\w+:\\/\\/[$\\-.+!*'()/,\\w]+)/g\r\n  },\r\n  heading (text, regex) {\r\n    return text.replace(regex, (_, hash, value) => {\r\n      return `<h${hash.length}>${value}</h${hash.length}>`\r\n    });\r\n  },\r\n  blockquote (text) {\r\n    text = text.replace(/\\>\\s+/g, '')\r\n    return `<blockquote>${text}</blockquote>`\r\n  }, \r\n  media (text, regex) {\r\n   return text.replace(regex, (match, title, src) => {\r\n      return /^!/.test(match)\r\n        ? `<img src=\"${src}\" alt=\"${title}\">\\n`\r\n        : /^&/.test(match)\r\n          ? `<iframe src=\"${src}\" title=\"${title}\"></iframe>\\n`\r\n          : `<a href=\"${src}\">${title}</a>\\n`\r\n    });\r\n  }\r\n}\r\n\r\nexport default utilInline","export default function cleanUp (text) {\r\n  const boldItalic = /([*_]{1,3})((.|\\n)+?)\\1/g\r\n  const strike = /(~{1,3})((.|\\n)+?)\\1/g\r\n  const marked = /`([^`].*?)`/g\r\n\r\n  text = text.replace(boldItalic, (_, stars, value) => {\r\n    return stars.length % 2 ? `<strong>${value}</strong>` : `<em>${value}</em>`\r\n  });\r\n\r\n  // match: ~~word~~\r\n  text = text.replace(strike, (_, stars, value) => {\r\n    return `<s>${value}</s>`\r\n  });\r\n\r\n  // match: `word`\r\n  text = text.replace(marked, (_, value) => {\r\n    return `<span class=\"marked\">${value}</span>`\r\n  });\r\n\r\n  // paragraph\r\n  if(!/^\\<.*\\>/g.test(text.trim())) {\r\n    text = `<p>${text}</p>`\r\n  }\r\n\r\n  return text\r\n}","import utilBlock from './utilBlock'\r\nimport utilInline from './utilInline'\r\nimport cleanUp from './cleanUp'\r\n\r\nfunction applyRegex (block, util) {\r\n  Object.keys(util.regex).forEach(reg => {\r\n    if (block.match(util.regex[reg])) block = util[reg](block, util.regex[reg])\r\n  });\r\n  return block\r\n}\r\n\r\nexport default function easmark (text) {\r\n  let blocks = text.split(/\\n\\s*\\n/)\r\n  let result = []\r\n\r\n  for (let block of blocks) {\r\n    block = applyRegex(block, utilInline)\r\n    block = applyRegex(block, utilBlock)\r\n    \r\n    result.push(block)\r\n  }\r\n\r\n  return result.map(line => cleanUp(line)).join('\\n')\r\n}"],"names":[],"mappings":"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"}